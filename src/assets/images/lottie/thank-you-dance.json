{"nm":"OlgaS_M2","ddd":0,"h":1200,"w":1200,"meta":{"g":"LottieFiles AE 3.1.1"},"layers":[{"ty":4,"nm":"eyes","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[37.164,402.657,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Shape 1","ix":1,"cix":2,"np":3,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[[-8.775,4.472],[-9.797,-9.2]],"o":[[12.75,-6.497],[11.25,10.565]],"v":[[-9.188,-368.75],[30.812,-366.5]]},"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"c":{"a":0,"k":[0,0,0],"ix":3}},{"ty":"fl","bm":0,"hd":true,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[1,0,0],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":1,"parent":3},{"ty":4,"nm":"nose","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[41.164,402.657,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Shape 1","ix":1,"cix":2,"np":3,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[[7.325,-8.061],[-8,-9.872]],"o":[[-6.875,7.565],[11.153,13.764]],"v":[[7.5,-362.938],[4.75,-341.75]]},"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"c":{"a":0,"k":[0,0,0],"ix":3}},{"ty":"gf","bm":0,"hd":true,"mn":"ADBE Vector Graphic - G-Fill","nm":"Gradient Fill 1","e":{"a":0,"k":[100,0],"ix":6},"g":{"p":3,"k":{"a":0,"k":[0,0.13333333333333333,0.403921568627451,0.5803921568627451,0.488,0.13333333333333333,0.403921568627451,0.5803921568627451,1,0.13333333333333333,0.403921568627451,0.5803921568627451,0,1,0.488,0.5,1,0],"ix":9}},"t":1,"a":{"a":0,"k":0},"h":{"a":0,"k":0},"s":{"a":0,"k":[0,0],"ix":5},"r":1,"o":{"a":0,"k":100,"ix":10}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":2,"parent":3},{"ty":4,"nm":"Head","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[46.302,95.42,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[65.629,22.394,0],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0],"t":0},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[11],"t":10},{"s":[0],"t":20.0000008146167}],"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":1,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-10.516,-0.148],[-11.627,9.698],[2.804,19.315],[26.993,-1.667],[-2.155,-29.069],[-9.191,-9.532]],"o":[[12.106,0.17],[9.725,-8.112],[-2.965,-20.425],[-25.811,1.594],[1.416,19.104],[9.142,9.48]],"v":[[-5.494,50.319],[28.387,33.351],[45.498,-20.128],[-0.932,-36.892],[-39.983,-14.192],[-26.005,30.186]]},"ix":2}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[45.552,58.42],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7804,0.651,0.5216],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}}],"ind":3,"parent":4},{"ty":4,"nm":"Neck","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[62.143,85.52,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[129.576,21.355,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":1,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-31.149,0.024],[12.813,7.262],[-4.266,25.936],[10.112,0.169],[-2.354,-11.215],[14.241,-7.441]],"o":[[29.271,-0.023],[-12.241,-6.938],[1.84,-11.183],[-9.872,-0.165],[6.149,29.297],[-7.655,4]],"v":[[11.481,33.246],[29.83,14.783],[22.83,-25.553],[11.681,-52.355],[-2.301,-29.227],[-13.247,13.863]]},"ix":2}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[54.143,57.52],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7804,0.651,0.5216],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}}],"ind":4,"parent":12},{"ty":4,"nm":"Hair","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[69.517,392.804,0],"ix":2},"r":{"a":0,"k":-5.5,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Shape 1","ix":1,"cix":2,"np":3,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[{"c":true,"i":[[26.337,1.762],[8.806,5.188],[3.032,6.786],[5.323,10.742],[4.641,10.949],[-5.905,10.357],[-18.613,14.971],[-3.963,1.859],[-17.966,-5.118],[-19.762,-9.671],[-6.047,-5.127],[-1.981,-5.543],[9.35,-19.797],[7.004,-16.393],[6.172,-4.629]],"o":[[-16.872,-1.129],[-8.825,-5.199],[-5.613,-12.562],[-6.367,-12.848],[-4.396,-10.372],[2.332,-4.089],[17.032,-13.699],[1.987,-0.932],[11.106,3.164],[12.466,6.101],[9.097,7.714],[1.686,4.718],[-7,14.821],[-6.17,14.44],[-8.114,6.086]],"v":[[-4.009,68.452],[-34.647,66.155],[-50.732,44.708],[-58.392,18.665],[-75.243,-3.548],[-73.711,-38.016],[-51.498,-57.165],[-30.817,-73.25],[5.183,-76.313],[34.289,-59.462],[55.736,-48.739],[70.289,-25.76],[70.289,20.197],[47.31,49.304],[39.651,75.346]]}],"t":0},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[{"c":true,"i":[[26.337,1.762],[8.806,5.188],[3.032,6.786],[5.323,10.742],[1.421,11.807],[2.232,11.711],[-11.21,8.683],[-8.154,3.215],[-15.982,-3.718],[-19.762,-9.671],[-6.047,-5.127],[-1.981,-5.543],[9.35,-19.798],[7.004,-16.393],[9.39,-3.413]],"o":[[-16.872,-1.129],[-8.825,-5.199],[-5.613,-12.562],[-6.367,-12.848],[-1.369,-11.376],[-0.713,-3.741],[11.642,-9.018],[8.861,-3.493],[11.247,2.616],[12.466,6.101],[9.097,7.714],[1.686,4.718],[-7,14.821],[-6.17,14.44],[-9.533,3.465]],"v":[[-18.226,72.082],[-46.865,67.08],[-59.049,47.016],[-70.906,19.117],[-85.307,-6.346],[-80.223,-32.617],[-70.459,-55.841],[-42.589,-65.084],[-12.935,-74.067],[19.897,-75.909],[50.624,-52.265],[60.086,-24.778],[61.34,18.547],[41.071,54.927],[15.87,68.343]]}],"t":10},{"s":[{"c":true,"i":[[26.337,1.762],[8.806,5.188],[3.032,6.786],[5.323,10.742],[4.641,10.949],[-5.905,10.357],[-18.613,14.971],[-3.963,1.859],[-17.966,-5.118],[-19.762,-9.671],[-6.047,-5.127],[-1.981,-5.543],[9.35,-19.797],[7.004,-16.393],[6.172,-4.629]],"o":[[-16.872,-1.129],[-8.825,-5.199],[-5.613,-12.562],[-6.367,-12.848],[-4.396,-10.372],[2.332,-4.089],[17.032,-13.699],[1.987,-0.932],[11.106,3.164],[12.466,6.101],[9.097,7.714],[1.686,4.718],[-7,14.821],[-6.17,14.44],[-8.114,6.086]],"v":[[-4.009,68.452],[-34.647,66.155],[-50.732,44.708],[-58.392,18.665],[-75.243,-3.548],[-73.711,-38.016],[-51.498,-57.165],[-30.817,-73.25],[5.183,-76.313],[34.289,-59.462],[55.736,-48.739],[70.289,-25.76],[70.289,20.197],[47.31,49.304],[39.651,75.346]]}],"t":20.0000008146167}],"ix":2}},{"ty":"st","bm":0,"hd":true,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"c":{"a":0,"k":[1,1,1],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.6353,0.7765,0.949],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[8,-341],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":5,"parent":3},{"ty":4,"nm":"right-Wrist","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":true,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[339.274,253.576,0],"t":0,"ti":[0,0,0],"to":[1.75,1.333,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[349.774,261.576,0],"t":10,"ti":[1.75,1.333,0],"to":[0,0,0]},{"s":[339.274,253.576,0],"t":20.0000008146167}],"ix":2},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = false;\nvar valueRot = userRot ? value : 0;\nvar startctrl = thisComp.layer('right-Shoulder');\nvar endctrl = thisLayer;\nvar curLayer = thisLayer;\nvar curRot = 0;\nwhile (curLayer.hasParent) {\n    curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curLayer = curLayer.parent;\n}\nvar rotend = $bm_div(endctrl.effect('Limber')('Rotate End'), 100);\nif (rotend == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3r = $bm_sub(p3ik, p1);\n    var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n    var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n    var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n    var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n    var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    var cwLin = Math.abs($bm_div(cw, 100));\n    var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n    var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n    var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n    var totLeng = $bm_sum(s3ik, s1ik);\n    var s2 = length(p1, p3ik);\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwLin), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwLin), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    try {\n        var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(theta1, Math.PI);\n        var a2ik = $bm_sum($bm_sum(theta1, theta2), Math.PI);\n    } catch (err) {\n        value;\n    }\n    var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n    if (curveLin == 0) {\n        $bm_rt = $bm_sum($bm_sum($bm_mul(rotend, $bm_sub($bm_sub(radiansToDegrees(a2ik), 180), curRot)), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    } else {\n        var p2ik = $bm_sum(p1, [\n                Math.sin(a1ik) * s3blend,\n                -Math.cos(a1ik) * s3blend\n            ]);\n        var p3ik = $bm_sum(p2ik, [\n                Math.sin(a2ik) * s1blend,\n                -Math.cos(a2ik) * s1blend\n            ]);\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n        var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n        var avang = $bm_div($bm_sub($bm_sum(a1ik, a2ik), Math.PI), 2);\n        var tangPos = $bm_sum(p2ik, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n        var tangPosRel = $bm_sub(tangPos, p3ik);\n        var a1curve = $bm_sum(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n        $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotend, a1curve), curRot), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    }\n}"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/Limber_16","nm":"Limber","ix":1,"en":1,"ef":[{"ty":6,"mn":"Pseudo/Limber_16-0001","nm":"Shape","ix":1,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0002","nm":"Upper Length","ix":2,"v":{"a":0,"k":138,"ix":2}},{"ty":0,"mn":"Pseudo/Limber_16-0003","nm":"Lower Length","ix":3,"v":{"a":0,"k":143,"ix":3}},{"ty":0,"mn":"Pseudo/Limber_16-0004","nm":"Start Size","ix":4,"v":{"a":0,"k":99,"ix":4}},{"ty":0,"mn":"Pseudo/Limber_16-0005","nm":"Middle Size","ix":5,"v":{"a":0,"k":71,"ix":5}},{"ty":0,"mn":"Pseudo/Limber_16-0006","nm":"End Size","ix":6,"v":{"a":0,"k":46,"ix":6}},{"ty":0,"mn":"Pseudo/Limber_16-0007","nm":"Bone Curvature","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":7,"mn":"Pseudo/Limber_16-0008","nm":"Square End","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":6,"mn":"Pseudo/Limber_16-0009","nm":"Limber","ix":9,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0010","nm":"Scale","ix":10,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0011","nm":"Size Scale","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":7,"mn":"Pseudo/Limber_16-0012","nm":"Link Length to Size Scale","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":6,"mn":"Pseudo/Limber_16-0013","nm":"Limber","ix":13,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0014","nm":"Colors","ix":14,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0015","nm":"Upper Split","ix":15,"v":{"a":0,"k":43,"ix":15}},{"ty":0,"mn":"Pseudo/Limber_16-0016","nm":"Upper Rounding","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":0,"mn":"Pseudo/Limber_16-0017","nm":"Lower Split","ix":17,"v":{"a":0,"k":70,"ix":17}},{"ty":0,"mn":"Pseudo/Limber_16-0018","nm":"Lower Rounding","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":2,"mn":"Pseudo/Limber_16-0019","nm":"Upper Color","ix":19,"v":{"a":0,"k":[0.8784,0.5843,0.1765],"ix":19}},{"ty":2,"mn":"Pseudo/Limber_16-0020","nm":"Middle Color","ix":20,"v":{"a":0,"k":[0.7804,0.651,0.5216],"ix":20}},{"ty":2,"mn":"Pseudo/Limber_16-0021","nm":"Lower Color","ix":21,"v":{"a":0,"k":[0.7804,0.651,0.5216],"ix":21}},{"ty":6,"mn":"Pseudo/Limber_16-0022","nm":"Limber","ix":22,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0023","nm":"Dynamics","ix":23,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0024","nm":"Clockwise","ix":24,"v":{"a":0,"k":100,"ix":24}},{"ty":0,"mn":"Pseudo/Limber_16-0025","nm":"Rotate Start","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"mn":"Pseudo/Limber_16-0026","nm":"Rotate End","ix":26,"v":{"a":0,"k":0,"ix":26}},{"ty":7,"mn":"Pseudo/Limber_16-0027","nm":"Stretch","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"mn":"Pseudo/Limber_16-0028","nm":"Anti-pop","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":6,"mn":"Pseudo/Limber_16-0029","nm":"Limber","ix":29,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0030","nm":"Forward Kinematics","ix":30,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0031","nm":"FK","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":0,"mn":"Pseudo/Limber_16-0032","nm":"Upper FK Rotation","ix":32,"v":{"a":0,"k":180,"ix":32}},{"ty":0,"mn":"Pseudo/Limber_16-0033","nm":"Lower FK Rotation","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":6,"mn":"Pseudo/Limber_16-0034","nm":"Limber","ix":34,"v":0}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Controller","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.93],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.08,3.37],[0,10.47],[10.47,0],[0,-4.927]],"v":[[14,-12.7],[14,-12.7],[0,-28],[-14,-12.7],[-14,-12.7],[-19,0],[0,19],[19,0]]},"ix":2,"x":"var $bm_rt;\n$bm_rt = value;"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[0,0.8,0,0],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisComp.layer('right-Shoulder');\nvar endctrl = thisLayer;\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum(rgbToHsl(value), [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":180,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Admin","ix":2,"cix":2,"np":6,"it":[{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p3blend","ix":1,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar s1blend = thisLayer.content('Admin').content('sides').transform.position[0];\nvar a2blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[1]);\nvar p2blend = thisLayer.content('Admin').content('p2blend').transform.position;\n$bm_rt = $bm_sum(p2blend, [\n    Math.sin(a2blend) * s1blend,\n    -Math.cos(a2blend) * s1blend\n]);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p2blend","ix":2,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar c2;\nvar endctrl = thisComp.layer('right-Wrist');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nc2 = clamp($bm_mul(endctrl.effect('Limber')('Middle Size'), sizeScale), 1, $bm_mul($bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), 0.55), endctrl.effect('Limber')('Link Length to Size Scale') == true ? sizeScale : 1));\n$bm_rt = [\n    c2,\n    c2\n];"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[1,0],"ix":2,"x":"var $bm_rt;\nvar s3blend = thisLayer(2)('Admin').content('sides').transform.position[1];\nvar a1blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[0]);\n$bm_rt = $bm_sum(thisLayer.content('Admin').content('p1').transform.position, [\n    Math.sin(a1blend) * s3blend,\n    -Math.cos(a1blend) * s3blend\n]);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"angles","ix":3,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1,"x":"var $bm_rt;\nvar startctrl = thisComp.layer('right-Shoulder');\nvar endctrl = thisComp.layer('right-Wrist');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nif (fk == 1) {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    $bm_rt = [\n        a1fk,\n        a1fk + a2fk\n    ];\n} else if (fk == 0) {\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var p3r = $bm_sub(p3ik, p1);\n    var s2ik = length(p1, p3ik);\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        $bm_rt = [\n            a1ik,\n            a2ik\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n} else {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var p3r = $bm_sub(p3ik, p1);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul($bm_sum(a1fk, a2fk), fk));\n        $bm_rt = [\n            a1blend,\n            a2blend\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n}"},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"sides","ix":4,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('right-Wrist');\nvar startctrl = thisComp.layer('right-Shoulder');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nvar p1 = thisLayer.content('Admin').content('p1').transform.position;\nvar p3 = thisLayer.content('Admin').content('p3ik').transform.position;\nvar c1 = $bm_div(thisLayer.content('Admin').content('p1').transform.scale[0], 2);\nvar c2 = $bm_div(thisLayer.content('Admin').content('p2blend').transform.scale[0], 2);\nvar c3 = $bm_div(thisLayer.content('Admin').content('p3ik').transform.scale[0], 2);\nvar linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nvar stretch = endctrl.effect('Limber')('Stretch');\nvar cw = $bm_div(endctrl.effect('Limber')('Clockwise'), 100);\nvar cwLin = Math.abs(cw);\nvar antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\nvar s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\nvar s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\nvar totLeng = $bm_sum(s3ik, s1ik);\nvar s2 = length(p1, p3);\nif (s2 > totLeng && stretch == false) {\n    $bm_rt = [\n        s1ik,\n        s3ik\n    ];\n} else if (s2 > totLeng && stretch == true) {\n    var increase = $bm_sum(1, $bm_div($bm_sub(s2, totLeng), totLeng));\n    $bm_rt = [\n        s1ik * increase * (1 - fk) + s1ik * fk,\n        s3ik * increase * (1 - fk) + s3ik * fk\n    ];\n} else {\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_mul(antipop, $bm_sub(1, fk))), 1));\n    var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    $bm_rt = [\n        s1blend,\n        s3blend\n    ];\n}"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p3ik","ix":5,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('right-Wrist');\nvar c3 = $bm_div($bm_mul(endctrl.effect('Limber')('End Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c3,\n    c3\n];"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('right-Wrist');\n$bm_rt = val.toWorld(val.anchorPoint);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p1","ix":6,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('right-Wrist');\nvar c1 = $bm_div($bm_mul(endctrl.effect('Limber')('Start Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c1,\n    c1\n];"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('right-Shoulder');\n$bm_rt = val.toWorld(val.anchorPoint);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('right-Wrist'),\n        hip: thisComp.layer('right-Shoulder'),\n        leg: thisComp.layer('right-Arm')\n    };\n$bm_rt = value;"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":6,"parent":12},{"ty":4,"nm":"right-Shoulder","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":true,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[160.674,56.468,0],"ix":2},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = false;\nvar valueRot = userRot ? value : 0;\nvar endctrl = thisComp.layer('right-Wrist');\nvar startctrl = thisComp.layer('right-Shoulder');\nvar rotstart = $bm_div(endctrl.effect('Limber')('Rotate Start'), 100);\nvar curlayer = startctrl;\nvar curRot = 0;\nwhile (curlayer.hasParent) {\n    curRot = $bm_sum(curRot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\nif (rotstart == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\n    if (fk == 1) {\n        var startctrl = thisComp.layer('right-Shoulder');\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var a1fk = degreesToRadians(endctrl.effect('Limber')('Upper FK Rotation'));\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, $bm_sub(radiansToDegrees(a1fk), 180)), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n            var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n            var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n            var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n            var s3fk = Math.max(endctrl.effect('Limber')('Upper Length'), Math.abs($bm_sub(c1, c2)));\n            var s1fk = Math.max(endctrl.effect('Limber')('Lower Length'), Math.abs($bm_sub(c2, c3)));\n            var p2fk = $bm_sum(p1, [\n                    Math.sin(a1fk) * s3fk,\n                    -Math.cos(a1fk) * s3fk\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1fk, a1fk), a2fk), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, $bm_sum(s3fk, s1fk)), 2);\n            var tangPos = $bm_sub(p2fk, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var a1fkcurve = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, a1fkcurve), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else if (fk == 0) {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1ik), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var p2ik = $bm_sum(p1, [\n                    Math.sin(a1ik) * s3blend,\n                    -Math.cos(a1ik) * s3blend\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1ik, a1ik), a2ik), Math.PI), 2);\n            var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n            var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n            var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n            var tangPos = $bm_sub(p2ik, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotik = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotik, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_div(endctrl.effect('Limber')('Anti-pop'), 100)), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var a1fk = degreesToRadians($bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation')));\n        var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul(a2fk, fk));\n        var p2blend = $bm_sum(p1, [\n                Math.sin(a1blend) * s3blend,\n                -Math.cos(a1blend) * s3blend\n            ]);\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1blend), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1blend, a1blend), a2blend), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, totLeng), 2);\n            var tangPos = $bm_sub(p2blend, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotblend = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotblend, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    }\n}"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Controller","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.93],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.08,3.37],[0,10.47],[10.47,0],[0,-4.927]],"v":[[14,-12.7],[14,-12.7],[0,-28],[-14,-12.7],[-14,-12.7],[-19,0],[0,19],[19,0]]},"ix":2,"x":"var $bm_rt;\n$bm_rt = value;"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[0,0.8,0,0],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisLayer;\nvar endctrl = thisComp.layer('right-Wrist');\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum(rgbToHsl(value), [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":180,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Admin","ix":2,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('right-Wrist'),\n        hip: thisComp.layer('right-Shoulder'),\n        leg: thisComp.layer('right-Arm')\n    };\n$bm_rt = value;"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":7,"parent":12},{"ty":4,"nm":"right-Arm","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[49,-168,0],"ix":2,"x":"var $bm_rt;\nvar val = [\n        0,\n        0\n    ];\nif (thisLayer.hasParent)\n    val = parent.fromWorld([\n        0,\n        0,\n        0\n    ]);\n$bm_rt = [\n    val[0],\n    val[1],\n    0\n];"},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar curlayer = thisLayer;\nvar rot = 0;\nwhile (curlayer.hasParent) {\n    rot = $bm_sum(rot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\n$bm_rt = $bm_neg(rot);"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Limb","ix":1,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Upper Group","ix":1,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Distal Upper","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('right-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Wrist').effect('Limber')('Middle Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Proximal Upper","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('right-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Wrist').effect('Limber')('Upper Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Wrist').content('Admin').content('p1').transform.position;"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Wrist').content('Admin').content('angles').transform.anchorPoint[0];"},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Lower Group","ix":2,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Proximal Lower","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('right-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Wrist').effect('Limber')('Middle Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Distal Lower","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('right-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Wrist').effect('Limber')('Lower Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Wrist').content('Admin').content('p2blend').transform.position;"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Wrist').content('Admin').content('angles').transform.anchorPoint[1];"},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"Admin","ix":2,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('right-Wrist'),\n        hip: thisComp.layer('right-Shoulder'),\n        leg: thisComp.layer('right-Arm')\n    };\n$bm_rt = value;"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":8},{"ty":4,"nm":"left-Wrist","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":true,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[-85.023,259.065,0],"t":0,"ti":[0,0,0],"to":[-8.177,8.446,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[-42.326,214.968,0],"t":10,"ti":[18.363,-18.965,0],"to":[0,0,0]},{"s":[-85.023,259.065,0],"t":20.0000008146167}],"ix":2},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = false;\nvar valueRot = userRot ? value : 0;\nvar startctrl = thisComp.layer('left-Shoulder');\nvar endctrl = thisLayer;\nvar curLayer = thisLayer;\nvar curRot = 0;\nwhile (curLayer.hasParent) {\n    curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curLayer = curLayer.parent;\n}\nvar rotend = $bm_div(endctrl.effect('Limber')('Rotate End'), 100);\nif (rotend == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3r = $bm_sub(p3ik, p1);\n    var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n    var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n    var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n    var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n    var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    var cwLin = Math.abs($bm_div(cw, 100));\n    var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n    var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n    var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n    var totLeng = $bm_sum(s3ik, s1ik);\n    var s2 = length(p1, p3ik);\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwLin), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwLin), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    try {\n        var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(theta1, Math.PI);\n        var a2ik = $bm_sum($bm_sum(theta1, theta2), Math.PI);\n    } catch (err) {\n        value;\n    }\n    var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n    if (curveLin == 0) {\n        $bm_rt = $bm_sum($bm_sum($bm_mul(rotend, $bm_sub($bm_sub(radiansToDegrees(a2ik), 180), curRot)), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    } else {\n        var p2ik = $bm_sum(p1, [\n                Math.sin(a1ik) * s3blend,\n                -Math.cos(a1ik) * s3blend\n            ]);\n        var p3ik = $bm_sum(p2ik, [\n                Math.sin(a2ik) * s1blend,\n                -Math.cos(a2ik) * s1blend\n            ]);\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n        var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n        var avang = $bm_div($bm_sub($bm_sum(a1ik, a2ik), Math.PI), 2);\n        var tangPos = $bm_sum(p2ik, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n        var tangPosRel = $bm_sub(tangPos, p3ik);\n        var a1curve = $bm_sum(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n        $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotend, a1curve), curRot), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    }\n}"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/Limber_16","nm":"Limber","ix":1,"en":1,"ef":[{"ty":6,"mn":"Pseudo/Limber_16-0001","nm":"Shape","ix":1,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0002","nm":"Upper Length","ix":2,"v":{"a":0,"k":137,"ix":2}},{"ty":0,"mn":"Pseudo/Limber_16-0003","nm":"Lower Length","ix":3,"v":{"a":0,"k":164,"ix":3}},{"ty":0,"mn":"Pseudo/Limber_16-0004","nm":"Start Size","ix":4,"v":{"a":0,"k":93,"ix":4}},{"ty":0,"mn":"Pseudo/Limber_16-0005","nm":"Middle Size","ix":5,"v":{"a":0,"k":70,"ix":5}},{"ty":0,"mn":"Pseudo/Limber_16-0006","nm":"End Size","ix":6,"v":{"a":0,"k":51,"ix":6}},{"ty":0,"mn":"Pseudo/Limber_16-0007","nm":"Bone Curvature","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":7,"mn":"Pseudo/Limber_16-0008","nm":"Square End","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":6,"mn":"Pseudo/Limber_16-0009","nm":"Limber","ix":9,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0010","nm":"Scale","ix":10,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0011","nm":"Size Scale","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":7,"mn":"Pseudo/Limber_16-0012","nm":"Link Length to Size Scale","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":6,"mn":"Pseudo/Limber_16-0013","nm":"Limber","ix":13,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0014","nm":"Colors","ix":14,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0015","nm":"Upper Split","ix":15,"v":{"a":0,"k":43,"ix":15}},{"ty":0,"mn":"Pseudo/Limber_16-0016","nm":"Upper Rounding","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":0,"mn":"Pseudo/Limber_16-0017","nm":"Lower Split","ix":17,"v":{"a":0,"k":70,"ix":17}},{"ty":0,"mn":"Pseudo/Limber_16-0018","nm":"Lower Rounding","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":2,"mn":"Pseudo/Limber_16-0019","nm":"Upper Color","ix":19,"v":{"a":0,"k":[0.8784,0.5843,0.1765],"ix":19}},{"ty":2,"mn":"Pseudo/Limber_16-0020","nm":"Middle Color","ix":20,"v":{"a":0,"k":[0.7804,0.651,0.5216],"ix":20}},{"ty":2,"mn":"Pseudo/Limber_16-0021","nm":"Lower Color","ix":21,"v":{"a":0,"k":[0.7804,0.651,0.5216],"ix":21}},{"ty":6,"mn":"Pseudo/Limber_16-0022","nm":"Limber","ix":22,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0023","nm":"Dynamics","ix":23,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0024","nm":"Clockwise","ix":24,"v":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[40],"t":0},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[-100],"t":10},{"s":[40],"t":20.0000008146167}],"ix":24}},{"ty":0,"mn":"Pseudo/Limber_16-0025","nm":"Rotate Start","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"mn":"Pseudo/Limber_16-0026","nm":"Rotate End","ix":26,"v":{"a":0,"k":0,"ix":26}},{"ty":7,"mn":"Pseudo/Limber_16-0027","nm":"Stretch","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"mn":"Pseudo/Limber_16-0028","nm":"Anti-pop","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":6,"mn":"Pseudo/Limber_16-0029","nm":"Limber","ix":29,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0030","nm":"Forward Kinematics","ix":30,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0031","nm":"FK","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":0,"mn":"Pseudo/Limber_16-0032","nm":"Upper FK Rotation","ix":32,"v":{"a":0,"k":180,"ix":32}},{"ty":0,"mn":"Pseudo/Limber_16-0033","nm":"Lower FK Rotation","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":6,"mn":"Pseudo/Limber_16-0034","nm":"Limber","ix":34,"v":0}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Controller","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.93],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.08,3.37],[0,10.47],[10.47,0],[0,-4.927]],"v":[[14,-12.7],[14,-12.7],[0,-28],[-14,-12.7],[-14,-12.7],[-19,0],[0,19],[19,0]]},"ix":2,"x":"var $bm_rt;\n$bm_rt = value;"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[0,0.8,0,0],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisComp.layer('left-Shoulder');\nvar endctrl = thisLayer;\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum(rgbToHsl(value), [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":180,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Admin","ix":2,"cix":2,"np":6,"it":[{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p3blend","ix":1,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar s1blend = thisLayer.content('Admin').content('sides').transform.position[0];\nvar a2blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[1]);\nvar p2blend = thisLayer.content('Admin').content('p2blend').transform.position;\n$bm_rt = $bm_sum(p2blend, [\n    Math.sin(a2blend) * s1blend,\n    -Math.cos(a2blend) * s1blend\n]);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p2blend","ix":2,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar c2;\nvar endctrl = thisComp.layer('left-Wrist');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nc2 = clamp($bm_mul(endctrl.effect('Limber')('Middle Size'), sizeScale), 1, $bm_mul($bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), 0.55), endctrl.effect('Limber')('Link Length to Size Scale') == true ? sizeScale : 1));\n$bm_rt = [\n    c2,\n    c2\n];"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[1,0],"ix":2,"x":"var $bm_rt;\nvar s3blend = thisLayer(2)('Admin').content('sides').transform.position[1];\nvar a1blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[0]);\n$bm_rt = $bm_sum(thisLayer.content('Admin').content('p1').transform.position, [\n    Math.sin(a1blend) * s3blend,\n    -Math.cos(a1blend) * s3blend\n]);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"angles","ix":3,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1,"x":"var $bm_rt;\nvar startctrl = thisComp.layer('left-Shoulder');\nvar endctrl = thisComp.layer('left-Wrist');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nif (fk == 1) {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    $bm_rt = [\n        a1fk,\n        a1fk + a2fk\n    ];\n} else if (fk == 0) {\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var p3r = $bm_sub(p3ik, p1);\n    var s2ik = length(p1, p3ik);\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        $bm_rt = [\n            a1ik,\n            a2ik\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n} else {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var p3r = $bm_sub(p3ik, p1);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul($bm_sum(a1fk, a2fk), fk));\n        $bm_rt = [\n            a1blend,\n            a2blend\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n}"},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"sides","ix":4,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('left-Wrist');\nvar startctrl = thisComp.layer('left-Shoulder');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nvar p1 = thisLayer.content('Admin').content('p1').transform.position;\nvar p3 = thisLayer.content('Admin').content('p3ik').transform.position;\nvar c1 = $bm_div(thisLayer.content('Admin').content('p1').transform.scale[0], 2);\nvar c2 = $bm_div(thisLayer.content('Admin').content('p2blend').transform.scale[0], 2);\nvar c3 = $bm_div(thisLayer.content('Admin').content('p3ik').transform.scale[0], 2);\nvar linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nvar stretch = endctrl.effect('Limber')('Stretch');\nvar cw = $bm_div(endctrl.effect('Limber')('Clockwise'), 100);\nvar cwLin = Math.abs(cw);\nvar antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\nvar s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\nvar s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\nvar totLeng = $bm_sum(s3ik, s1ik);\nvar s2 = length(p1, p3);\nif (s2 > totLeng && stretch == false) {\n    $bm_rt = [\n        s1ik,\n        s3ik\n    ];\n} else if (s2 > totLeng && stretch == true) {\n    var increase = $bm_sum(1, $bm_div($bm_sub(s2, totLeng), totLeng));\n    $bm_rt = [\n        s1ik * increase * (1 - fk) + s1ik * fk,\n        s3ik * increase * (1 - fk) + s3ik * fk\n    ];\n} else {\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_mul(antipop, $bm_sub(1, fk))), 1));\n    var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    $bm_rt = [\n        s1blend,\n        s3blend\n    ];\n}"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p3ik","ix":5,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('left-Wrist');\nvar c3 = $bm_div($bm_mul(endctrl.effect('Limber')('End Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c3,\n    c3\n];"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('left-Wrist');\n$bm_rt = val.toWorld(val.anchorPoint);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p1","ix":6,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('left-Wrist');\nvar c1 = $bm_div($bm_mul(endctrl.effect('Limber')('Start Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c1,\n    c1\n];"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('left-Shoulder');\n$bm_rt = val.toWorld(val.anchorPoint);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('left-Wrist'),\n        hip: thisComp.layer('left-Shoulder'),\n        leg: thisComp.layer('left-Arm')\n    };\n$bm_rt = value;"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":9,"parent":12},{"ty":4,"nm":"left-Shoulder","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":true,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[80.674,46.468,0],"ix":2},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = false;\nvar valueRot = userRot ? value : 0;\nvar endctrl = thisComp.layer('left-Wrist');\nvar startctrl = thisComp.layer('left-Shoulder');\nvar rotstart = $bm_div(endctrl.effect('Limber')('Rotate Start'), 100);\nvar curlayer = startctrl;\nvar curRot = 0;\nwhile (curlayer.hasParent) {\n    curRot = $bm_sum(curRot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\nif (rotstart == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\n    if (fk == 1) {\n        var startctrl = thisComp.layer('left-Shoulder');\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var a1fk = degreesToRadians(endctrl.effect('Limber')('Upper FK Rotation'));\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, $bm_sub(radiansToDegrees(a1fk), 180)), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n            var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n            var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n            var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n            var s3fk = Math.max(endctrl.effect('Limber')('Upper Length'), Math.abs($bm_sub(c1, c2)));\n            var s1fk = Math.max(endctrl.effect('Limber')('Lower Length'), Math.abs($bm_sub(c2, c3)));\n            var p2fk = $bm_sum(p1, [\n                    Math.sin(a1fk) * s3fk,\n                    -Math.cos(a1fk) * s3fk\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1fk, a1fk), a2fk), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, $bm_sum(s3fk, s1fk)), 2);\n            var tangPos = $bm_sub(p2fk, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var a1fkcurve = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, a1fkcurve), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else if (fk == 0) {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1ik), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var p2ik = $bm_sum(p1, [\n                    Math.sin(a1ik) * s3blend,\n                    -Math.cos(a1ik) * s3blend\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1ik, a1ik), a2ik), Math.PI), 2);\n            var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n            var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n            var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n            var tangPos = $bm_sub(p2ik, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotik = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotik, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_div(endctrl.effect('Limber')('Anti-pop'), 100)), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var a1fk = degreesToRadians($bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation')));\n        var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul(a2fk, fk));\n        var p2blend = $bm_sum(p1, [\n                Math.sin(a1blend) * s3blend,\n                -Math.cos(a1blend) * s3blend\n            ]);\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1blend), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1blend, a1blend), a2blend), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, totLeng), 2);\n            var tangPos = $bm_sub(p2blend, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotblend = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotblend, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    }\n}"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Controller","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.93],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.08,3.37],[0,10.47],[10.47,0],[0,-4.927]],"v":[[14,-12.7],[14,-12.7],[0,-28],[-14,-12.7],[-14,-12.7],[-19,0],[0,19],[19,0]]},"ix":2,"x":"var $bm_rt;\n$bm_rt = value;"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[0,0.8,0,0],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisLayer;\nvar endctrl = thisComp.layer('left-Wrist');\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum(rgbToHsl(value), [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":180,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Admin","ix":2,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('left-Wrist'),\n        hip: thisComp.layer('left-Shoulder'),\n        leg: thisComp.layer('left-Arm')\n    };\n$bm_rt = value;"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":10,"parent":12},{"ty":4,"nm":"left-Arm","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[0,0,0],"ix":2,"x":"var $bm_rt;\nvar val = [\n        0,\n        0\n    ];\nif (thisLayer.hasParent)\n    val = parent.fromWorld([\n        0,\n        0,\n        0\n    ]);\n$bm_rt = [\n    val[0],\n    val[1],\n    0\n];"},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar curlayer = thisLayer;\nvar rot = 0;\nwhile (curlayer.hasParent) {\n    rot = $bm_sum(rot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\n$bm_rt = $bm_neg(rot);"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Limb","ix":1,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Upper Group","ix":1,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Distal Upper","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('left-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Wrist').effect('Limber')('Middle Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Proximal Upper","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('left-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Wrist').effect('Limber')('Upper Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Wrist').content('Admin').content('p1').transform.position;"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Wrist').content('Admin').content('angles').transform.anchorPoint[0];"},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Lower Group","ix":2,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Proximal Lower","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('left-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Wrist').effect('Limber')('Middle Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Distal Lower","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('left-Wrist');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Wrist').effect('Limber')('Lower Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Wrist').content('Admin').content('p2blend').transform.position;"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Wrist').content('Admin').content('angles').transform.anchorPoint[1];"},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"Admin","ix":2,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('left-Wrist'),\n        hip: thisComp.layer('left-Shoulder'),\n        leg: thisComp.layer('left-Arm')\n    };\n$bm_rt = value;"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":11},{"ty":4,"nm":"Torso","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[128.669,262.893,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[616.995,603.925,0],"t":0,"ti":[0,0,0],"to":[-5.333,0.833,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[584.995,608.925,0],"t":10,"ti":[-5.333,0.833,0],"to":[0,0,0]},{"s":[616.995,603.925,0],"t":20.0000008146167}],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":1,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-8.101,0],[-8.114,-23.842],[-0.979,-9.773],[-14.37,-36.235],[-5.293,-15.039],[-2.902,9.912],[-9.707,32.922],[9.101,35.67],[-14.452,7.736]],"o":[[7.426,0],[5.662,16.634],[2.946,29.404],[16.324,41.162],[9.066,25.761],[9.335,-31.888],[9.795,-33.223],[-10.914,-42.775],[17.708,-9.478]],"v":[[5.265,-180.893],[57.605,-148.467],[57.308,-102.329],[71.43,-24.337],[106.688,74.563],[-105.844,68.912],[-81.039,-29.598],[-77.097,-103.595],[-61.884,-170.936]]},"ix":2}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[125.67,185.893],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.8784,0.5843,0.1765],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}}],"ind":12},{"ty":4,"nm":"right-Ankle","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":true,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[785.968,1016.553,0],"ix":2},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = false;\nvar valueRot = userRot ? value : 0;\nvar startctrl = thisComp.layer('right-Hip');\nvar endctrl = thisLayer;\nvar curLayer = thisLayer;\nvar curRot = 0;\nwhile (curLayer.hasParent) {\n    curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curLayer = curLayer.parent;\n}\nvar rotend = $bm_div(endctrl.effect('Limber')('Rotate End'), 100);\nif (rotend == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3r = $bm_sub(p3ik, p1);\n    var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n    var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n    var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n    var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n    var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    var cwLin = Math.abs($bm_div(cw, 100));\n    var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n    var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n    var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n    var totLeng = $bm_sum(s3ik, s1ik);\n    var s2 = length(p1, p3ik);\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwLin), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwLin), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    try {\n        var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(theta1, Math.PI);\n        var a2ik = $bm_sum($bm_sum(theta1, theta2), Math.PI);\n    } catch (err) {\n        value;\n    }\n    var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n    if (curveLin == 0) {\n        $bm_rt = $bm_sum($bm_sum($bm_mul(rotend, $bm_sub($bm_sub(radiansToDegrees(a2ik), 180), curRot)), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    } else {\n        var p2ik = $bm_sum(p1, [\n                Math.sin(a1ik) * s3blend,\n                -Math.cos(a1ik) * s3blend\n            ]);\n        var p3ik = $bm_sum(p2ik, [\n                Math.sin(a2ik) * s1blend,\n                -Math.cos(a2ik) * s1blend\n            ]);\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n        var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n        var avang = $bm_div($bm_sub($bm_sum(a1ik, a2ik), Math.PI), 2);\n        var tangPos = $bm_sum(p2ik, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n        var tangPosRel = $bm_sub(tangPos, p3ik);\n        var a1curve = $bm_sum(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n        $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotend, a1curve), curRot), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    }\n}"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/Limber_16","nm":"Limber","ix":1,"en":1,"ef":[{"ty":6,"mn":"Pseudo/Limber_16-0001","nm":"Shape","ix":1,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0002","nm":"Upper Length","ix":2,"v":{"a":0,"k":209,"ix":2}},{"ty":0,"mn":"Pseudo/Limber_16-0003","nm":"Lower Length","ix":3,"v":{"a":0,"k":202,"ix":3}},{"ty":0,"mn":"Pseudo/Limber_16-0004","nm":"Start Size","ix":4,"v":{"a":0,"k":110,"ix":4}},{"ty":0,"mn":"Pseudo/Limber_16-0005","nm":"Middle Size","ix":5,"v":{"a":0,"k":65,"ix":5}},{"ty":0,"mn":"Pseudo/Limber_16-0006","nm":"End Size","ix":6,"v":{"a":0,"k":53,"ix":6}},{"ty":0,"mn":"Pseudo/Limber_16-0007","nm":"Bone Curvature","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":7,"mn":"Pseudo/Limber_16-0008","nm":"Square End","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":6,"mn":"Pseudo/Limber_16-0009","nm":"Limber","ix":9,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0010","nm":"Scale","ix":10,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0011","nm":"Size Scale","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":7,"mn":"Pseudo/Limber_16-0012","nm":"Link Length to Size Scale","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":6,"mn":"Pseudo/Limber_16-0013","nm":"Limber","ix":13,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0014","nm":"Colors","ix":14,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0015","nm":"Upper Split","ix":15,"v":{"a":0,"k":74,"ix":15}},{"ty":0,"mn":"Pseudo/Limber_16-0016","nm":"Upper Rounding","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":0,"mn":"Pseudo/Limber_16-0017","nm":"Lower Split","ix":17,"v":{"a":0,"k":94,"ix":17}},{"ty":0,"mn":"Pseudo/Limber_16-0018","nm":"Lower Rounding","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":2,"mn":"Pseudo/Limber_16-0019","nm":"Upper Color","ix":19,"v":{"a":0,"k":[0.9412,0.9294,0.9176],"ix":19}},{"ty":2,"mn":"Pseudo/Limber_16-0020","nm":"Middle Color","ix":20,"v":{"a":0,"k":[0.7804,0.651,0.5216],"ix":20}},{"ty":2,"mn":"Pseudo/Limber_16-0021","nm":"Lower Color","ix":21,"v":{"a":0,"k":[0.7804,0.651,0.5216],"ix":21}},{"ty":6,"mn":"Pseudo/Limber_16-0022","nm":"Limber","ix":22,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0023","nm":"Dynamics","ix":23,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0024","nm":"Clockwise","ix":24,"v":{"a":0,"k":-82,"ix":24}},{"ty":0,"mn":"Pseudo/Limber_16-0025","nm":"Rotate Start","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"mn":"Pseudo/Limber_16-0026","nm":"Rotate End","ix":26,"v":{"a":0,"k":0,"ix":26}},{"ty":7,"mn":"Pseudo/Limber_16-0027","nm":"Stretch","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"mn":"Pseudo/Limber_16-0028","nm":"Anti-pop","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":6,"mn":"Pseudo/Limber_16-0029","nm":"Limber","ix":29,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0030","nm":"Forward Kinematics","ix":30,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0031","nm":"FK","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":0,"mn":"Pseudo/Limber_16-0032","nm":"Upper FK Rotation","ix":32,"v":{"a":0,"k":180,"ix":32}},{"ty":0,"mn":"Pseudo/Limber_16-0033","nm":"Lower FK Rotation","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":6,"mn":"Pseudo/Limber_16-0034","nm":"Limber","ix":34,"v":0}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Controller","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.93],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.08,3.37],[0,10.47],[10.47,0],[0,-4.927]],"v":[[14,-12.7],[14,-12.7],[0,-28],[-14,-12.7],[-14,-12.7],[-19,0],[0,19],[19,0]]},"ix":2,"x":"var $bm_rt;\n$bm_rt = value;"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[0,0.8,0,0],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisComp.layer('right-Hip');\nvar endctrl = thisLayer;\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum(rgbToHsl(value), [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":180,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Admin","ix":2,"cix":2,"np":6,"it":[{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p3blend","ix":1,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar s1blend = thisLayer.content('Admin').content('sides').transform.position[0];\nvar a2blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[1]);\nvar p2blend = thisLayer.content('Admin').content('p2blend').transform.position;\n$bm_rt = $bm_sum(p2blend, [\n    Math.sin(a2blend) * s1blend,\n    -Math.cos(a2blend) * s1blend\n]);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p2blend","ix":2,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar c2;\nvar endctrl = thisComp.layer('right-Ankle');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nc2 = clamp($bm_mul(endctrl.effect('Limber')('Middle Size'), sizeScale), 1, $bm_mul($bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), 0.55), endctrl.effect('Limber')('Link Length to Size Scale') == true ? sizeScale : 1));\n$bm_rt = [\n    c2,\n    c2\n];"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[1,0],"ix":2,"x":"var $bm_rt;\nvar s3blend = thisLayer(2)('Admin').content('sides').transform.position[1];\nvar a1blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[0]);\n$bm_rt = $bm_sum(thisLayer.content('Admin').content('p1').transform.position, [\n    Math.sin(a1blend) * s3blend,\n    -Math.cos(a1blend) * s3blend\n]);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"angles","ix":3,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1,"x":"var $bm_rt;\nvar startctrl = thisComp.layer('right-Hip');\nvar endctrl = thisComp.layer('right-Ankle');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nif (fk == 1) {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    $bm_rt = [\n        a1fk,\n        a1fk + a2fk\n    ];\n} else if (fk == 0) {\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var p3r = $bm_sub(p3ik, p1);\n    var s2ik = length(p1, p3ik);\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        $bm_rt = [\n            a1ik,\n            a2ik\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n} else {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var p3r = $bm_sub(p3ik, p1);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul($bm_sum(a1fk, a2fk), fk));\n        $bm_rt = [\n            a1blend,\n            a2blend\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n}"},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"sides","ix":4,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('right-Ankle');\nvar startctrl = thisComp.layer('right-Hip');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nvar p1 = thisLayer.content('Admin').content('p1').transform.position;\nvar p3 = thisLayer.content('Admin').content('p3ik').transform.position;\nvar c1 = $bm_div(thisLayer.content('Admin').content('p1').transform.scale[0], 2);\nvar c2 = $bm_div(thisLayer.content('Admin').content('p2blend').transform.scale[0], 2);\nvar c3 = $bm_div(thisLayer.content('Admin').content('p3ik').transform.scale[0], 2);\nvar linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nvar stretch = endctrl.effect('Limber')('Stretch');\nvar cw = $bm_div(endctrl.effect('Limber')('Clockwise'), 100);\nvar cwLin = Math.abs(cw);\nvar antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\nvar s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\nvar s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\nvar totLeng = $bm_sum(s3ik, s1ik);\nvar s2 = length(p1, p3);\nif (s2 > totLeng && stretch == false) {\n    $bm_rt = [\n        s1ik,\n        s3ik\n    ];\n} else if (s2 > totLeng && stretch == true) {\n    var increase = $bm_sum(1, $bm_div($bm_sub(s2, totLeng), totLeng));\n    $bm_rt = [\n        s1ik * increase * (1 - fk) + s1ik * fk,\n        s3ik * increase * (1 - fk) + s3ik * fk\n    ];\n} else {\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_mul(antipop, $bm_sub(1, fk))), 1));\n    var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    $bm_rt = [\n        s1blend,\n        s3blend\n    ];\n}"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p3ik","ix":5,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('right-Ankle');\nvar c3 = $bm_div($bm_mul(endctrl.effect('Limber')('End Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c3,\n    c3\n];"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('right-Ankle');\n$bm_rt = val.toWorld(val.anchorPoint);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p1","ix":6,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('right-Ankle');\nvar c1 = $bm_div($bm_mul(endctrl.effect('Limber')('Start Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c1,\n    c1\n];"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('right-Hip');\n$bm_rt = val.toWorld(val.anchorPoint);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('right-Ankle'),\n        hip: thisComp.layer('right-Hip'),\n        leg: thisComp.layer('right-Leg')\n    };\n$bm_rt = value;"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":13},{"ty":4,"nm":"right-Hip","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":true,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[184.918,302.121,0],"ix":2},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = false;\nvar valueRot = userRot ? value : 0;\nvar endctrl = thisComp.layer('right-Ankle');\nvar startctrl = thisComp.layer('right-Hip');\nvar rotstart = $bm_div(endctrl.effect('Limber')('Rotate Start'), 100);\nvar curlayer = startctrl;\nvar curRot = 0;\nwhile (curlayer.hasParent) {\n    curRot = $bm_sum(curRot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\nif (rotstart == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\n    if (fk == 1) {\n        var startctrl = thisComp.layer('right-Hip');\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var a1fk = degreesToRadians(endctrl.effect('Limber')('Upper FK Rotation'));\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, $bm_sub(radiansToDegrees(a1fk), 180)), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n            var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n            var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n            var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n            var s3fk = Math.max(endctrl.effect('Limber')('Upper Length'), Math.abs($bm_sub(c1, c2)));\n            var s1fk = Math.max(endctrl.effect('Limber')('Lower Length'), Math.abs($bm_sub(c2, c3)));\n            var p2fk = $bm_sum(p1, [\n                    Math.sin(a1fk) * s3fk,\n                    -Math.cos(a1fk) * s3fk\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1fk, a1fk), a2fk), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, $bm_sum(s3fk, s1fk)), 2);\n            var tangPos = $bm_sub(p2fk, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var a1fkcurve = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, a1fkcurve), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else if (fk == 0) {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1ik), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var p2ik = $bm_sum(p1, [\n                    Math.sin(a1ik) * s3blend,\n                    -Math.cos(a1ik) * s3blend\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1ik, a1ik), a2ik), Math.PI), 2);\n            var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n            var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n            var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n            var tangPos = $bm_sub(p2ik, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotik = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotik, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_div(endctrl.effect('Limber')('Anti-pop'), 100)), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var a1fk = degreesToRadians($bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation')));\n        var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul(a2fk, fk));\n        var p2blend = $bm_sum(p1, [\n                Math.sin(a1blend) * s3blend,\n                -Math.cos(a1blend) * s3blend\n            ]);\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1blend), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1blend, a1blend), a2blend), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, totLeng), 2);\n            var tangPos = $bm_sub(p2blend, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotblend = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotblend, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    }\n}"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Controller","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.93],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.08,3.37],[0,10.47],[10.47,0],[0,-4.927]],"v":[[14,-12.7],[14,-12.7],[0,-28],[-14,-12.7],[-14,-12.7],[-19,0],[0,19],[19,0]]},"ix":2,"x":"var $bm_rt;\n$bm_rt = value;"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[0,0.8,0,0],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisLayer;\nvar endctrl = thisComp.layer('right-Ankle');\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum(rgbToHsl(value), [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":180,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Admin","ix":2,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('right-Ankle'),\n        hip: thisComp.layer('right-Hip'),\n        leg: thisComp.layer('right-Leg')\n    };\n$bm_rt = value;"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":14,"parent":12},{"ty":4,"nm":"right-Leg","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[0,0,0],"ix":2,"x":"var $bm_rt;\nvar val = [\n        0,\n        0\n    ];\nif (thisLayer.hasParent)\n    val = parent.fromWorld([\n        0,\n        0,\n        0\n    ]);\n$bm_rt = [\n    val[0],\n    val[1],\n    0\n];"},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar curlayer = thisLayer;\nvar rot = 0;\nwhile (curlayer.hasParent) {\n    rot = $bm_sum(rot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\n$bm_rt = $bm_neg(rot);"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Limb","ix":1,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Upper Group","ix":1,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Distal Upper","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('right-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Ankle').effect('Limber')('Middle Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Proximal Upper","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('right-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Ankle').effect('Limber')('Upper Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Ankle').content('Admin').content('p1').transform.position;"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Ankle').content('Admin').content('angles').transform.anchorPoint[0];"},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Lower Group","ix":2,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Proximal Lower","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('right-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Ankle').effect('Limber')('Middle Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Distal Lower","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('right-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Ankle').effect('Limber')('Lower Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Ankle').content('Admin').content('p2blend').transform.position;"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('right-Ankle').content('Admin').content('angles').transform.anchorPoint[1];"},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"Admin","ix":2,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('right-Ankle'),\n        hip: thisComp.layer('right-Hip'),\n        leg: thisComp.layer('right-Leg')\n    };\n$bm_rt = value;"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":15},{"ty":4,"nm":"left-Ankle","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":true,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[386.968,1033.053,0],"ix":2},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = false;\nvar valueRot = userRot ? value : 0;\nvar startctrl = thisComp.layer('left-Hip');\nvar endctrl = thisLayer;\nvar curLayer = thisLayer;\nvar curRot = 0;\nwhile (curLayer.hasParent) {\n    curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curLayer = curLayer.parent;\n}\nvar rotend = $bm_div(endctrl.effect('Limber')('Rotate End'), 100);\nif (rotend == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var p1 = startctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3ik = endctrl.toWorld([\n            0,\n            0,\n            0\n        ]);\n    var p3r = $bm_sub(p3ik, p1);\n    var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n    var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n    var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n    var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n    var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    var cwLin = Math.abs($bm_div(cw, 100));\n    var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n    var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n    var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n    var totLeng = $bm_sum(s3ik, s1ik);\n    var s2 = length(p1, p3ik);\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwLin), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwLin), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwLin)));\n    try {\n        var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(theta1, Math.PI);\n        var a2ik = $bm_sum($bm_sum(theta1, theta2), Math.PI);\n    } catch (err) {\n        value;\n    }\n    var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n    if (curveLin == 0) {\n        $bm_rt = $bm_sum($bm_sum($bm_mul(rotend, $bm_sub($bm_sub(radiansToDegrees(a2ik), 180), curRot)), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    } else {\n        var p2ik = $bm_sum(p1, [\n                Math.sin(a1ik) * s3blend,\n                -Math.cos(a1ik) * s3blend\n            ]);\n        var p3ik = $bm_sum(p2ik, [\n                Math.sin(a2ik) * s1blend,\n                -Math.cos(a2ik) * s1blend\n            ]);\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n        var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n        var avang = $bm_div($bm_sub($bm_sum(a1ik, a2ik), Math.PI), 2);\n        var tangPos = $bm_sum(p2ik, [\n                Math.cos(avang) * tangLeng,\n                Math.sin(avang) * tangLeng\n            ]);\n        var tangPosRel = $bm_sub(tangPos, p3ik);\n        var a1curve = $bm_sum(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n        $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotend, a1curve), curRot), $bm_mul($bm_sub(1, rotend), $bm_neg(curRot))), valueRot);\n    }\n}"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/Limber_16","nm":"Limber","ix":1,"en":1,"ef":[{"ty":6,"mn":"Pseudo/Limber_16-0001","nm":"Shape","ix":1,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0002","nm":"Upper Length","ix":2,"v":{"a":0,"k":249,"ix":2}},{"ty":0,"mn":"Pseudo/Limber_16-0003","nm":"Lower Length","ix":3,"v":{"a":0,"k":208,"ix":3}},{"ty":0,"mn":"Pseudo/Limber_16-0004","nm":"Start Size","ix":4,"v":{"a":0,"k":130,"ix":4}},{"ty":0,"mn":"Pseudo/Limber_16-0005","nm":"Middle Size","ix":5,"v":{"a":0,"k":65,"ix":5}},{"ty":0,"mn":"Pseudo/Limber_16-0006","nm":"End Size","ix":6,"v":{"a":0,"k":55,"ix":6}},{"ty":0,"mn":"Pseudo/Limber_16-0007","nm":"Bone Curvature","ix":7,"v":{"a":0,"k":0,"ix":7}},{"ty":7,"mn":"Pseudo/Limber_16-0008","nm":"Square End","ix":8,"v":{"a":0,"k":0,"ix":8}},{"ty":6,"mn":"Pseudo/Limber_16-0009","nm":"Limber","ix":9,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0010","nm":"Scale","ix":10,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0011","nm":"Size Scale","ix":11,"v":{"a":0,"k":100,"ix":11}},{"ty":7,"mn":"Pseudo/Limber_16-0012","nm":"Link Length to Size Scale","ix":12,"v":{"a":0,"k":1,"ix":12}},{"ty":6,"mn":"Pseudo/Limber_16-0013","nm":"Limber","ix":13,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0014","nm":"Colors","ix":14,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0015","nm":"Upper Split","ix":15,"v":{"a":0,"k":64,"ix":15}},{"ty":0,"mn":"Pseudo/Limber_16-0016","nm":"Upper Rounding","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":0,"mn":"Pseudo/Limber_16-0017","nm":"Lower Split","ix":17,"v":{"a":0,"k":90,"ix":17}},{"ty":0,"mn":"Pseudo/Limber_16-0018","nm":"Lower Rounding","ix":18,"v":{"a":0,"k":0,"ix":18}},{"ty":2,"mn":"Pseudo/Limber_16-0019","nm":"Upper Color","ix":19,"v":{"a":0,"k":[0.9412,0.9294,0.9176],"ix":19}},{"ty":2,"mn":"Pseudo/Limber_16-0020","nm":"Middle Color","ix":20,"v":{"a":0,"k":[0.7804,0.651,0.5216],"ix":20}},{"ty":2,"mn":"Pseudo/Limber_16-0021","nm":"Lower Color","ix":21,"v":{"a":0,"k":[0.7804,0.651,0.5216],"ix":21}},{"ty":6,"mn":"Pseudo/Limber_16-0022","nm":"Limber","ix":22,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0023","nm":"Dynamics","ix":23,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0024","nm":"Clockwise","ix":24,"v":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[-100],"t":0},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[100],"t":10},{"s":[-100],"t":20.0000008146167}],"ix":24}},{"ty":0,"mn":"Pseudo/Limber_16-0025","nm":"Rotate Start","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":0,"mn":"Pseudo/Limber_16-0026","nm":"Rotate End","ix":26,"v":{"a":0,"k":0,"ix":26}},{"ty":7,"mn":"Pseudo/Limber_16-0027","nm":"Stretch","ix":27,"v":{"a":0,"k":1,"ix":27}},{"ty":0,"mn":"Pseudo/Limber_16-0028","nm":"Anti-pop","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":6,"mn":"Pseudo/Limber_16-0029","nm":"Limber","ix":29,"v":0},{"ty":6,"mn":"Pseudo/Limber_16-0030","nm":"Forward Kinematics","ix":30,"v":0},{"ty":0,"mn":"Pseudo/Limber_16-0031","nm":"FK","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":0,"mn":"Pseudo/Limber_16-0032","nm":"Upper FK Rotation","ix":32,"v":{"a":0,"k":180,"ix":32}},{"ty":0,"mn":"Pseudo/Limber_16-0033","nm":"Lower FK Rotation","ix":33,"v":{"a":0,"k":0,"ix":33}},{"ty":6,"mn":"Pseudo/Limber_16-0034","nm":"Limber","ix":34,"v":0}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Controller","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.93],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.08,3.37],[0,10.47],[10.47,0],[0,-4.927]],"v":[[14,-12.7],[14,-12.7],[0,-28],[-14,-12.7],[-14,-12.7],[-19,0],[0,19],[19,0]]},"ix":2,"x":"var $bm_rt;\n$bm_rt = value;"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[0,0.8,0,0],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisComp.layer('left-Hip');\nvar endctrl = thisLayer;\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum(rgbToHsl(value), [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":180,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Admin","ix":2,"cix":2,"np":6,"it":[{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p3blend","ix":1,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar s1blend = thisLayer.content('Admin').content('sides').transform.position[0];\nvar a2blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[1]);\nvar p2blend = thisLayer.content('Admin').content('p2blend').transform.position;\n$bm_rt = $bm_sum(p2blend, [\n    Math.sin(a2blend) * s1blend,\n    -Math.cos(a2blend) * s1blend\n]);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p2blend","ix":2,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar c2;\nvar endctrl = thisComp.layer('left-Ankle');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nc2 = clamp($bm_mul(endctrl.effect('Limber')('Middle Size'), sizeScale), 1, $bm_mul($bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), 0.55), endctrl.effect('Limber')('Link Length to Size Scale') == true ? sizeScale : 1));\n$bm_rt = [\n    c2,\n    c2\n];"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[1,0],"ix":2,"x":"var $bm_rt;\nvar s3blend = thisLayer(2)('Admin').content('sides').transform.position[1];\nvar a1blend = degreesToRadians(thisLayer.content('Admin').content('angles').transform.anchorPoint[0]);\n$bm_rt = $bm_sum(thisLayer.content('Admin').content('p1').transform.position, [\n    Math.sin(a1blend) * s3blend,\n    -Math.cos(a1blend) * s3blend\n]);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"angles","ix":3,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1,"x":"var $bm_rt;\nvar startctrl = thisComp.layer('left-Hip');\nvar endctrl = thisComp.layer('left-Ankle');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nif (fk == 1) {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    $bm_rt = [\n        a1fk,\n        a1fk + a2fk\n    ];\n} else if (fk == 0) {\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var p3r = $bm_sub(p3ik, p1);\n    var s2ik = length(p1, p3ik);\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        $bm_rt = [\n            a1ik,\n            a2ik\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n} else {\n    var curLayer = startctrl;\n    var curRot = 0;\n    while (curLayer.hasParent) {\n        curRot = $bm_sum(curRot, curLayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n        curLayer = curLayer.parent;\n    }\n    var a2fk = endctrl.effect('Limber')('Lower FK Rotation');\n    var a1fk = $bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation'));\n    var p1 = thisLayer.content('Admin').content('p1').transform.position;\n    var p3ik = thisLayer.content('Admin').content('p3ik').transform.position;\n    var sides = thisLayer.content('Admin').content('sides').transform.position;\n    var s3blend = sides[1];\n    var s1blend = sides[0];\n    var p3r = $bm_sub(p3ik, p1);\n    var cw = endctrl.effect('Limber')('Clockwise');\n    try {\n        var theta2 = $bm_mul($bm_neg(cw > 0 ? -1 : 1), Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n        var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n        var a1ik = $bm_sum(180, radiansToDegrees(theta1));\n        var a2ik = $bm_sum(180, radiansToDegrees($bm_sum(theta1, theta2)));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul($bm_sum(a1fk, a2fk), fk));\n        $bm_rt = [\n            a1blend,\n            a2blend\n        ];\n    } catch (err) {\n        $bm_rt = value;\n    }\n}"},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"sides","ix":4,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('left-Ankle');\nvar startctrl = thisComp.layer('left-Hip');\nvar fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\nvar p1 = thisLayer.content('Admin').content('p1').transform.position;\nvar p3 = thisLayer.content('Admin').content('p3ik').transform.position;\nvar c1 = $bm_div(thisLayer.content('Admin').content('p1').transform.scale[0], 2);\nvar c2 = $bm_div(thisLayer.content('Admin').content('p2blend').transform.scale[0], 2);\nvar c3 = $bm_div(thisLayer.content('Admin').content('p3ik').transform.scale[0], 2);\nvar linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\nvar sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\nvar stretch = endctrl.effect('Limber')('Stretch');\nvar cw = $bm_div(endctrl.effect('Limber')('Clockwise'), 100);\nvar cwLin = Math.abs(cw);\nvar antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\nvar s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\nvar s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\nvar totLeng = $bm_sum(s3ik, s1ik);\nvar s2 = length(p1, p3);\nif (s2 > totLeng && stretch == false) {\n    $bm_rt = [\n        s1ik,\n        s3ik\n    ];\n} else if (s2 > totLeng && stretch == true) {\n    var increase = $bm_sum(1, $bm_div($bm_sub(s2, totLeng), totLeng));\n    $bm_rt = [\n        s1ik * increase * (1 - fk) + s1ik * fk,\n        s3ik * increase * (1 - fk) + s3ik * fk\n    ];\n} else {\n    var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n    var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_mul(antipop, $bm_sub(1, fk))), 1));\n    var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n    var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n    var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n    var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n    $bm_rt = [\n        s1blend,\n        s3blend\n    ];\n}"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p3ik","ix":5,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('left-Ankle');\nvar c3 = $bm_div($bm_mul(endctrl.effect('Limber')('End Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c3,\n    c3\n];"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('left-Ankle');\n$bm_rt = val.toWorld(val.anchorPoint);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"p1","ix":6,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar endctrl = thisComp.layer('left-Ankle');\nvar c1 = $bm_div($bm_mul(endctrl.effect('Limber')('Start Size'), endctrl.effect('Limber')('Size Scale')), 100);\n$bm_rt = [\n    c1,\n    c1\n];"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\nvar val = thisComp.layer('left-Hip');\n$bm_rt = val.toWorld(val.anchorPoint);"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('left-Ankle'),\n        hip: thisComp.layer('left-Hip'),\n        leg: thisComp.layer('left-Leg')\n    };\n$bm_rt = value;"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":16},{"ty":4,"nm":"left-Hip","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":true,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[81.918,285.121,0],"ix":2},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar userRot = false;\nvar valueRot = userRot ? value : 0;\nvar endctrl = thisComp.layer('left-Ankle');\nvar startctrl = thisComp.layer('left-Hip');\nvar rotstart = $bm_div(endctrl.effect('Limber')('Rotate Start'), 100);\nvar curlayer = startctrl;\nvar curRot = 0;\nwhile (curlayer.hasParent) {\n    curRot = $bm_sum(curRot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\nif (rotstart == 0) {\n    $bm_rt = $bm_sum($bm_neg(curRot), valueRot);\n} else {\n    var fk = $bm_div(endctrl.effect('Limber')('FK'), 100);\n    if (fk == 1) {\n        var startctrl = thisComp.layer('left-Hip');\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var a1fk = degreesToRadians(endctrl.effect('Limber')('Upper FK Rotation'));\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, $bm_sub(radiansToDegrees(a1fk), 180)), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n            var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n            var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n            var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n            var s3fk = Math.max(endctrl.effect('Limber')('Upper Length'), Math.abs($bm_sub(c1, c2)));\n            var s1fk = Math.max(endctrl.effect('Limber')('Lower Length'), Math.abs($bm_sub(c2, c3)));\n            var p2fk = $bm_sum(p1, [\n                    Math.sin(a1fk) * s3fk,\n                    -Math.cos(a1fk) * s3fk\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1fk, a1fk), a2fk), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, $bm_sum(s3fk, s1fk)), 2);\n            var tangPos = $bm_sub(p2fk, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var a1fkcurve = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_sub($bm_mul(rotstart, a1fkcurve), curRot), $bm_mul($bm_neg(rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else if (fk == 0) {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var antipop = $bm_div(endctrl.effect('Limber')('Anti-pop'), 100);\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, antipop), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1ik), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var p2ik = $bm_sum(p1, [\n                    Math.sin(a1ik) * s3blend,\n                    -Math.cos(a1ik) * s3blend\n                ]);\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1ik, a1ik), a2ik), Math.PI), 2);\n            var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n            var linkScale = endctrl.effect('Limber')('Link Length to Size Scale');\n            var tangLeng = $bm_mul($bm_div($bm_mul(curveLin, $bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length'))), 2), linkScale == true ? sizeScale : 1);\n            var tangPos = $bm_sub(p2ik, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotik = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotik, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    } else {\n        var p1 = startctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3ik = endctrl.toWorld([\n                0,\n                0,\n                0\n            ]);\n        var p3r = $bm_sub(p3ik, p1);\n        var s2 = length(p1, p3ik);\n        var c1 = $bm_div(endctrl.content('Admin').content('p1').transform.scale[0], 2);\n        var c2 = $bm_div(endctrl.content('Admin').content('p2blend').transform.scale[0], 2);\n        var c3 = $bm_div(endctrl.content('Admin').content('p3blend').transform.scale[0], 2);\n        var linkLeng = endctrl.effect('Limber')('Link Length to Size Scale');\n        var sizeScale = $bm_div(endctrl.effect('Limber')('Size Scale'), 100);\n        var cw = endctrl.effect('Limber')('Clockwise');\n        var cwLin = Math.abs($bm_div(cw, 100));\n        var s3ik = Math.max($bm_mul(endctrl.effect('Limber')('Upper Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c1, c2)));\n        var s1ik = Math.max($bm_mul(endctrl.effect('Limber')('Lower Length'), linkLeng == true ? sizeScale : 1), Math.abs($bm_sub(c2, c3)));\n        var totLeng = $bm_sum(s3ik, s1ik);\n        var s2 = length(p1, p3ik);\n        var prox = linear(Math.abs($bm_sub(s2, $bm_div(totLeng, 2))), 0, $bm_div(totLeng, 2), 0, 1);\n        var antipopLin = $bm_mul(totLeng, linear(linear($bm_mul($bm_mul(prox, prox), prox), 0.833, 1), $bm_sub(1, $bm_div(endctrl.effect('Limber')('Anti-pop'), 100)), 1));\n        var s1ap = $bm_mul(antipopLin, $bm_div(s1ik, totLeng));\n        var s3ap = $bm_mul(antipopLin, $bm_div(s3ik, totLeng));\n        var cwBlend = $bm_sum(cwLin, $bm_mul(fk, $bm_sub(1, cwLin)));\n        var s3blend = $bm_sum($bm_mul(s3ap, cwBlend), $bm_mul($bm_mul($bm_div(s3ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        var s1blend = $bm_sum($bm_mul(s1ap, cwBlend), $bm_mul($bm_mul($bm_div(s1ap, $bm_sum(s3ap, s1ap)), s2), $bm_sub(1, cwBlend)));\n        try {\n            var theta2 = $bm_mul(cw > 0 ? 1 : -1, Math.acos(clamp($bm_div($bm_sub($bm_sub($bm_sum($bm_mul(p3r[1], p3r[1]), $bm_mul(p3r[0], p3r[0])), $bm_mul(s3blend, s3blend)), $bm_mul(s1blend, s1blend)), $bm_mul($bm_mul(2, s3blend), s1blend)), -1, 1)));\n            var theta1 = Math.atan2($bm_sub($bm_mul($bm_neg(p3r[0]), $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[1], $bm_mul(s1blend, Math.sin(theta2)))), $bm_sub($bm_mul(p3r[1], $bm_sum(s3blend, $bm_mul(s1blend, Math.cos(theta2)))), $bm_mul(p3r[0], $bm_mul(s1blend, Math.sin(theta2)))));\n            var a1ik = $bm_sum(theta1, Math.PI);\n            var a2ik = theta2;\n        } catch (err) {\n            value;\n        }\n        var a1fk = degreesToRadians($bm_sum(curRot, endctrl.effect('Limber')('Upper FK Rotation')));\n        var a2fk = degreesToRadians(endctrl.effect('Limber')('Lower FK Rotation'));\n        var a1blend = $bm_sum($bm_mul(a1ik, $bm_sub(1, fk)), $bm_mul(a1fk, fk));\n        var a2blend = $bm_sum($bm_mul(a2ik, $bm_sub(1, fk)), $bm_mul(a2fk, fk));\n        var p2blend = $bm_sum(p1, [\n                Math.sin(a1blend) * s3blend,\n                -Math.cos(a1blend) * s3blend\n            ]);\n        var curveLin = $bm_div(endctrl.effect('Limber')('Bone Curvature'), 100);\n        if (curveLin == 0) {\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub($bm_sub(radiansToDegrees(a1blend), 180), curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        } else {\n            var avang = $bm_div($bm_sub($bm_sum($bm_sum(a1blend, a1blend), a2blend), Math.PI), 2);\n            var tangLeng = $bm_div($bm_mul(curveLin, totLeng), 2);\n            var tangPos = $bm_sub(p2blend, [\n                    Math.cos(avang) * tangLeng,\n                    Math.sin(avang) * tangLeng\n                ]);\n            var tangPosRel = $bm_sub(tangPos, p1);\n            var curveRotblend = $bm_sub(radiansToDegrees(Math.atan2(tangPosRel[1], tangPosRel[0])), 90);\n            $bm_rt = $bm_sum($bm_sum($bm_mul(rotstart, $bm_sub(curveRotblend, curRot)), $bm_mul($bm_sub(1, rotstart), $bm_neg(curRot))), valueRot);\n        }\n    }\n}"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Controller","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[3.082,3.37],[0,0],[0,0],[0,0],[0,0],[0,-4.93],[-10.467,0],[0,10.467]],"o":[[0,0],[0,0],[0,0],[0,0],[-3.08,3.37],[0,10.47],[10.47,0],[0,-4.927]],"v":[[14,-12.7],[14,-12.7],[0,-28],[-14,-12.7],[-14,-12.7],[-19,0],[0,19],[19,0]]},"ix":2,"x":"var $bm_rt;\n$bm_rt = value;"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[0,0.8,0,0],"ix":4,"x":"var $bm_rt;\nvar hsl;\nvar startctrl = thisLayer;\nvar endctrl = thisComp.layer('left-Ankle');\nvar totLeng = $bm_mul($bm_sum(endctrl.effect('Limber')('Upper Length'), endctrl.effect('Limber')('Lower Length')), endctrl.effect('Limber')('Link Length to Size Scale') == true ? endctrl.effect('Limber')('Size Scale') / 100 : 1);\nvar stretchLimit = length(endctrl.toWorld(endctrl.anchorPoint), startctrl.toWorld(startctrl.anchorPoint));\n$bm_rt = hsl = $bm_sum(rgbToHsl(value), [\n    linear(stretchLimit, $bm_mul(totLeng, 0.97), totLeng, 0, 0.19),\n    0,\n    0\n]);\nif (stretchLimit > totLeng)\n    $bm_rt = [\n        1,\n        0,\n        0,\n        0\n    ];\nelse\n    $bm_rt = hslToRgb(hsl);"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":180,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Admin","ix":2,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('left-Ankle'),\n        hip: thisComp.layer('left-Hip'),\n        leg: thisComp.layer('left-Leg')\n    };\n$bm_rt = value;"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":17,"parent":12},{"ty":4,"nm":"left-Leg","sr":1,"st":0,"op":21.0000008553475,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[0,0,0],"ix":2,"x":"var $bm_rt;\nvar val = [\n        0,\n        0\n    ];\nif (thisLayer.hasParent)\n    val = parent.fromWorld([\n        0,\n        0,\n        0\n    ]);\n$bm_rt = [\n    val[0],\n    val[1],\n    0\n];"},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar curlayer = thisLayer;\nvar rot = 0;\nwhile (curlayer.hasParent) {\n    rot = $bm_sum(rot, curlayer.parent('ADBE Transform Group')('ADBE Rotate Z'));\n    curlayer = curlayer.parent;\n}\n$bm_rt = $bm_neg(rot);"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Limb","ix":1,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Upper Group","ix":1,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Distal Upper","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('left-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Ankle').effect('Limber')('Middle Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Proximal Upper","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('left-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Ankle').effect('Limber')('Upper Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Ankle').content('Admin').content('p1').transform.position;"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Ankle').content('Admin').content('angles').transform.anchorPoint[0];"},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Lower Group","ix":2,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Proximal Lower","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('left-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Ankle').effect('Limber')('Middle Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Distal Lower","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Taper Path","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[],"o":[],"v":[]},"ix":2,"x":"var $bm_rt;\nvar newA, newT, nq0, nq1, nq2, nr0, nr1, ns0, t, q0, q1, q2, r0, r1, s0, v6, v4, newVerts, newIns, newOuts, uq1, uq2, ur0, ur1, us0;\nfunction midPoint(p1, p2, per) {\n    return [\n        p1[0] + (p2[0] - p1[0]) * per,\n        p1[1] + (p2[1] - p1[1]) * per\n    ];\n}\nfunction tangentsAbsolute(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sum(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction tangentsRelative(vertices, tans) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        tans[i] = $bm_sub(tans[i], vertices[i]);\n    }\n    return tans;\n}\nfunction fx(point) {\n    return [\n        -point[0],\n        point[1]\n    ];\n}\nfunction fy(point) {\n    return [\n        point[0],\n        -point[1]\n    ];\n}\nfunction fxy(point) {\n    return [\n        -point[0],\n        -point[1]\n    ];\n}\nfunction flipArrayY(vertices, flipPoint) {\n    for (var i = 0, il = vertices.length; i < il; i++) {\n        vertices[i] = [\n            vertices[i][0],\n            $bm_sub($bm_mul(flipPoint, 2), vertices[i][1])\n        ];\n    }\n    return vertices;\n}\nfunction pointAlongY(val, p1, p2) {\n    var linearValue = linear(val, p1[1], p2[1], p1[0], p2[0]);\n    return [\n        linearValue,\n        val\n    ];\n}\nfunction xOnCircleGivenY(x, r) {\n    return Math.sqrt($bm_sub($bm_mul(r, r), $bm_mul(x, x)));\n}\nvar semiFac = 0.55228474983079;\nvar quad = $bm_mul(0.5, Math.PI);\nvar groupName = thisProperty.propertyGroup(3)._name;\nvar isUpper = groupName.split(' ')[1] === 'Upper';\nvar isProximal = groupName.split(' ')[0] === 'Proximal';\nvar endctrl = thisComp.layer('left-Ankle');\nvar lowerSplit = endctrl.effect('Limber')('Lower Split');\nvar lowerSplitValue = $bm_div(lowerSplit.value, 100);\nvar upperSplit = endctrl.effect('Limber')('Upper Split');\nvar upperSplitValue = $bm_div(upperSplit.value, 100);\nvar lowerRounding = endctrl.effect('Limber')('Lower Rounding');\nvar lowerRoundingValue = $bm_div(lowerRounding.value, 100);\nvar upperRounding = endctrl.effect('Limber')('Upper Rounding');\nvar upperRoundingValue = $bm_div(upperRounding.value, 100);\nvar squareEndValue = endctrl.effect('Limber')('Square End').value;\nvar sides = endctrl.content('Admin').content('sides').transform.position;\nif (isUpper) {\n    var c2 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c1 = endctrl.content('Admin').content('p1').transform.scale;\n    var dist = sides[1];\n} else {\n    var c1 = endctrl.content('Admin').content('p2blend').transform.scale;\n    var c2 = endctrl.content('Admin').content('p3ik').transform.scale;\n    var dist = sides[0];\n}\nvar distrad = $bm_mul(c2[0], 0.5);\nvar proxrad = $bm_mul(c1[0], 0.5);\nvar pers = $bm_neg(lowerRoundingValue);\nvar splitY = isProximal ? lowerSplitValue : $bm_sub(1, lowerSplitValue);\nif (isUpper) {\n    pers = $bm_neg(upperRoundingValue);\n    splitY = isProximal ? upperSplitValue : $bm_sub(1, upperSplitValue);\n}\nsplitY = $bm_sub($bm_mul($bm_neg(dist), splitY), 0.5);\nvar rad1 = $bm_div(Math.round($bm_mul(isProximal ? proxrad : distrad, 100000)), 100000);\nvar rad2 = $bm_div(Math.round($bm_mul(isProximal ? distrad : proxrad, 100000)), 100000);\nvar A = Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1));\nvar r3a = [\n        rad2 * Math.sin(A),\n        -(dist - rad2 * Math.cos(A))\n    ];\nvar r3b = [\n        rad1 * Math.sin(A),\n        rad1 * Math.cos(A)\n    ];\nvar semiVerts = [\n        [\n            rad1,\n            0\n        ],\n        [\n            0,\n            rad1\n        ],\n        [\n            -rad1,\n            0\n        ]\n    ];\nvar semiIns = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            0\n        ],\n        [\n            $bm_mul(rad1, semiFac),\n            0\n        ],\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ]\n    ]);\nvar semiOuts = tangentsAbsolute(semiVerts, [\n        [\n            0,\n            $bm_mul(rad1, semiFac)\n        ],\n        [\n            $bm_mul($bm_neg(rad1), semiFac),\n            0\n        ],\n        [\n            0,\n            0\n        ]\n    ]);\nif (rad2 < rad1) {\n    if (splitY > r3b[1]) {\n        var state = 1;\n        newA = $bm_neg(Math.atan2(splitY, xOnCircleGivenY(splitY, rad1)));\n        newT = $bm_div(newA, quad);\n        nq0 = midPoint(semiVerts[0], semiOuts[0], newT);\n        nq1 = midPoint(semiOuts[0], semiIns[1], newT);\n        nq2 = midPoint(semiIns[1], semiVerts[1], newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(nq0),\n            semiVerts[0],\n            semiIns[1],\n            semiIns[2],\n            fxy(nr0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(ns0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiVerts[0],\n            semiOuts[0],\n            semiOuts[1],\n            fxy(nq0),\n            fxy(ns0),\n            [\n                0,\n                splitY\n            ],\n            fy(ns0),\n            fy(nr0)\n        ]);\n    } else {\n        var state = 2;\n        t = $bm_div($bm_sub(A, quad), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, fy(s0));\n        v4 = fx(v6);\n        newVerts = [\n            semiVerts[0],\n            semiVerts[1],\n            semiVerts[2],\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ];\n        newIns = tangentsRelative(newVerts, [\n            fy(q0),\n            semiIns[1],\n            semiIns[2],\n            fxy(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(s0)\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            semiOuts[0],\n            semiOuts[1],\n            fxy(q0),\n            fxy(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            fy(r0)\n        ]);\n    }\n} else {\n    if (splitY < r3a[1]) {\n        var state = 3;\n        var UpsemiVerts = [\n                [\n                    rad2,\n                    -dist\n                ],\n                [\n                    0,\n                    -(dist - rad2)\n                ],\n                [\n                    -rad2,\n                    -dist\n                ]\n            ];\n        var UpsemiIns = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    0\n                ],\n                [\n                    $bm_mul(rad2, semiFac),\n                    0\n                ],\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ]\n            ]);\n        var UpsemiOuts = tangentsAbsolute(UpsemiVerts, [\n                [\n                    0,\n                    $bm_mul(rad2, semiFac)\n                ],\n                [\n                    $bm_mul($bm_neg(rad2), semiFac),\n                    0\n                ],\n                [\n                    0,\n                    0\n                ]\n            ]);\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        if (rad2 == rad1) {\n            var upA = 0.00001;\n        } else {\n            var upA = $bm_sub(quad, Math.acos(clamp($bm_div($bm_sub(rad2, rad1), dist), -1, 1)));\n        }\n        var upT = $bm_div(upA, quad);\n        var uq0 = midPoint(UpsemiVerts[0], UpsemiOuts[0], upT);\n        uq1 = midPoint(UpsemiOuts[0], UpsemiIns[1], upT);\n        uq2 = midPoint(UpsemiIns[1], UpsemiVerts[1], upT);\n        ur0 = midPoint(uq0, uq1, upT);\n        ur1 = midPoint(uq1, uq2, upT);\n        us0 = midPoint(ur0, ur1, upT);\n        newA = $bm_neg(Math.atan2($bm_sub($bm_neg(dist), splitY), xOnCircleGivenY($bm_sub($bm_neg(dist), splitY), rad2)));\n        newT = $bm_div(newA, upA);\n        nq0 = midPoint(UpsemiVerts[0], uq0, newT);\n        nq1 = midPoint(uq0, ur0, newT);\n        nq2 = midPoint(ur0, us0, newT);\n        nr0 = midPoint(nq0, nq1, newT);\n        nr1 = midPoint(nq1, nq2, newT);\n        ns0 = midPoint(nr0, nr1, newT);\n        newVerts = [\n            s0,\n            semiVerts[1],\n            fx(s0),\n            fx(r3a),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            q2,\n            fx(r1),\n            fx(r3a),\n            fx(nr1),\n            [\n                0,\n                splitY\n            ],\n            ns0,\n            us0\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            r1,\n            fx(q2),\n            fx(r0),\n            fx(nq2),\n            fx(ns0),\n            [\n                0,\n                splitY\n            ],\n            nr1,\n            r3a\n        ]);\n    } else {\n        var state = 4;\n        t = $bm_div($bm_sub(quad, A), quad);\n        q0 = midPoint(semiVerts[0], semiOuts[0], t);\n        q1 = midPoint(semiOuts[0], semiIns[1], t);\n        q2 = midPoint(semiIns[1], semiVerts[1], t);\n        r0 = midPoint(q0, q1, t);\n        r1 = midPoint(q1, q2, t);\n        s0 = midPoint(r0, r1, t);\n        v6 = pointAlongY(splitY, r3a, s0);\n        v4 = fx(v6);\n        newVerts = [\n            s0,\n            s0,\n            semiVerts[1],\n            fx(s0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ];\n        newIns = tangentsRelative(newVerts, [\n            s0,\n            s0,\n            q2,\n            fx(r1),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            v6\n        ]);\n        newOuts = tangentsRelative(newVerts, [\n            s0,\n            r1,\n            fx(q2),\n            fx(r0),\n            v4,\n            [\n                0,\n                splitY\n            ],\n            v6,\n            r0\n        ]);\n    }\n}\nif (isProximal != true) {\n    var tempVerts = newVerts;\n    var tempIns = newIns;\n    var tempOuts = newOuts;\n    newVerts = flipArrayY(tempVerts, -dist * 0.5).reverse();\n    newIns = flipArrayY(tempOuts, 0).reverse();\n    newOuts = flipArrayY(tempIns, 0).reverse();\n}\nif (pers != 0) {\n    var pVert = isProximal ? 5 : 2;\n    newVerts[pVert] = $bm_sum(newVerts[pVert], isProximal ? [\n        0,\n        newVerts[pVert + 1][0] * pers\n    ] : [\n        0,\n        -newVerts[pVert + 1][0] * pers\n    ]);\n    newIns[pVert] = [\n        $bm_mul($bm_neg(newVerts[pVert + 1][0]), semiFac),\n        0\n    ];\n    newOuts[pVert] = [\n        $bm_mul(newVerts[pVert + 1][0], semiFac),\n        0\n    ];\n    var B = isProximal ? $bm_sub($bm_div(Math.PI, 2), A) : -(Math.PI / 2 + A);\n    var temp6 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newIns[pVert + 1][0] = $bm_mul($bm_neg(temp6[1]), Math.sin(B));\n    newIns[pVert + 1][1] = $bm_mul(temp6[1], Math.cos(B));\n    var temp4 = [\n            0,\n            newVerts[pVert + 1][0] * semiFac * pers\n        ];\n    newOuts[pVert - 1][0] = $bm_mul($bm_neg(temp4[1]), Math.sin($bm_neg(B)));\n    newOuts[pVert - 1][1] = $bm_mul(temp4[1], Math.cos($bm_neg(B)));\n}\nif (squareEndValue && !isUpper && !isProximal) {\n    if (state === 1) {\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n    if (state === 2) {\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 3) {\n        newVerts[5] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[5] = [\n            0,\n            0\n        ];\n        newIns[7] = [\n            0,\n            0\n        ];\n    }\n    if (state === 4) {\n        newVerts[4] = [\n            $bm_neg(distrad),\n            $bm_neg(dist)\n        ];\n        newVerts[5] = [\n            0,\n            $bm_neg(dist)\n        ];\n        newVerts[6] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newVerts[7] = [\n            distrad,\n            $bm_neg(dist)\n        ];\n        newOuts[4] = [\n            0,\n            0\n        ];\n        newIns[6] = [\n            0,\n            0\n        ];\n    }\n}\n$bm_rt = createPath(newVerts, newIns, newOuts, true);"}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill","c":{"a":0,"k":[1,0,0],"ix":4,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Ankle').effect('Limber')('Lower Color');"},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Ankle').content('Admin').content('p2blend').transform.position;"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\n$bm_rt = thisComp.layer('left-Ankle').content('Admin').content('angles').transform.anchorPoint[1];"},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":true,"mn":"ADBE Vector Group","nm":"Admin","ix":2,"cix":2,"it":[{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar limbLayers = {\n        ankle: thisComp.layer('left-Ankle'),\n        hip: thisComp.layer('left-Hip'),\n        leg: thisComp.layer('left-Leg')\n    };\n$bm_rt = value;"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":18}],"v":"4.8.0","fr":29.9700012207031,"op":20.0000008146167,"ip":0,"assets":[]}